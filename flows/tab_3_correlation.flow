[{"id":"286fd2d0.56b346","type":"inject","z":"45ad5636.1dd6a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":131,"y":147,"wires":[["424bbbc0.074efc"]]},{"id":"3003865.c60447a","type":"debug","z":"45ad5636.1dd6a","name":"","active":true,"console":"false","complete":"false","x":831,"y":136,"wires":[]},{"id":"424bbbc0.074efc","type":"python3-function","z":"45ad5636.1dd6a","name":"Get Netatmo & Traffic Data","func":"from modules.library import read_data,create_frame,insert_mongo\nimport datetime\nimport time\nimport pandas as pd\nimport random\n\ndef getNames(data):\n    res = []\n    for x in data:\n        res.append(x['libelle'])\n    return set(res)\n    \ndef createRandSpeed(frame):\n    for index, row in frame.iterrows():\n        frame.set_value(index,'vitesse' , \\\n                random.uniform(30.0,60.0))\n    return\n\nhost = 'mongodb'\ndb = 'myDB'\ncollection = 'biotope'\n\ntimes = []\n\n\nfor i in range(10):\n    data = read_data(configFile='modules/config.yml')\n    lyon_d = data['lyon']\n    neta_d = data['netatmo']\n    \n    #street_name = lyon_d[0]['libelle']\n    if i == 0:\n        roads = getNames(lyon_d)\n    else:\n        roads = set.intersection(roads,getNames(lyon_d))\n    \n    _ = insert_mongo(db, collection, lyon_d, host)\n    _ = insert_mongo(db, collection, neta_d, host)\n    \n    day_time = data['datetime']\n    times.append(day_time)\n    \n    \n    time.sleep(120)\n\nroads = list(roads)\nstreet_name = roads[0]\n\nframe = create_frame(db,collection,street_name,dates=times,limit_num=3)\n\nprint frame\n\ncreateRandSpeed(frame)\n\nprint frame\n\ncorr = frame.corr(method='pearson', min_periods=1)\nprint corr  \n\ncor_json = corr.to_json()\n\nmsg['payload'] = cor_json\n\n\nreturn msg","outputs":1,"x":364,"y":147,"wires":[["d321f1f0.6ac0d"]]},{"id":"f4c8e419.0dde78","type":"ui_template","z":"45ad5636.1dd6a","group":"c1447e70.ce5ae","name":"","order":0,"width":"0","height":"0","format":"<style>\n    {{msg.style}}\n</style>\n\n<table>\n  <tr>\n  <th>-/-</th>\n  <th>Length</th>\n  <th>Pressure</th>\n  <th>Temperature</th>\n  <th>Speed</th>\n  \n  <tr ng-repeat=\"(key, value) in msg.payload\">\n     <td>{{key}}</td>\n     <td>{{value.longueur}}</td>\n     <td>{{value.pres}}</td>\n     <td>{{value.temp}}</td>\n     <td>{{value.vitesse}}</td>\n  </tr>\n</table>","storeOutMessages":false,"fwdInMessages":true,"x":1142,"y":263,"wires":[[]]},{"id":"d321f1f0.6ac0d","type":"json","z":"45ad5636.1dd6a","name":"","x":542,"y":213,"wires":[["d07cfa56.42948","3003865.c60447a"]]},{"id":"d07cfa56.42948","type":"template","z":"45ad5636.1dd6a","name":"css","field":"style","fieldType":"msg","format":"html","syntax":"mustache","template":"table {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    /*border-collapse: collapse;\n    border-spacing: 0;*/\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */","x":702,"y":293,"wires":[["26ad0478.8e4624"]]},{"id":"26ad0478.8e4624","type":"function","z":"45ad5636.1dd6a","name":"Remove Null Values","func":"//https://flows.nodered.org/flow/8a0959d742e9af9517312b2f8b44e500\n\nfor (var x in msg.payload) {\n    //console.log(x)\n    tmp = msg.payload[x]\n    for (var key in tmp) {\n        //if (typeof tmp[key] === 'number' && isNaN(tmp[key])) {\n        if (tmp[key] == null) {\n            tmp[key] = '-'\n        }\n        console.log(tmp[key])  \n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":928.5,"y":262,"wires":[["f4c8e419.0dde78"]]},{"id":"c1447e70.ce5ae","type":"ui_group","z":"45ad5636.1dd6a","name":"Correlation:","tab":"e2330b8a.9e5bd8","disp":true,"width":"13"},{"id":"e2330b8a.9e5bd8","type":"ui_tab","z":"45ad5636.1dd6a","name":"Tableau","icon":"dashboard"}]

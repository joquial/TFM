[{"id":"77ecfa45.288ad4","type":"inject","z":"75f203cc.dbc05c","name":"Tick !","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":201,"y":304,"wires":[["eb8412a3.859438","3e81e12e.dc987e"]]},{"id":"ea2889ea.97bda","type":"function","z":"75f203cc.dbc05c","name":"Preprocess Netatmo Data","func":"var outputMsgs = [];\nvar tmp = JSON.parse(msg.payload);\nvar all = tmp['body'];\n\nfor (var x in all) {\n    var msg = {};\n    msg.payload = {};\n    var id = all[x]['_id'];\n    var location = all[x]['place']['location'];\n    var aux = '';\n    for (var z in all[x]['measures']) {\n        aux = all[x]['measures'][z];\n        break;\n    }\n\n    msg.payload.lon = location[0];\n    msg.payload.lat = location[1];\n    msg.payload.name = id;\n    for (var y in aux['res']) {\n        msg.payload.temp = aux['res'][y][0];\n        msg.payload.pres = aux['res'][y][1];\n    }\n    \n    msg.payload.icon = \"globe\";\n    if (msg.payload.temp > 16) {\n        msg.payload.iconColor = \"friend\";\n    } else {\n        msg.payload.iconColor = \"orange\";\n    }\n    msg.payload.layer = \"netatmo\";\n    \n    outputMsgs.push(msg);\n}\n\nreturn [outputMsgs];","outputs":1,"noerr":0,"x":826,"y":151,"wires":[["65aa5f23.047948","394c1c71.a1d094"]]},{"id":"6713fd20.147cbc","type":"http request","z":"75f203cc.dbc05c","name":"Lyon Netatmo","method":"GET","ret":"txt","url":"","tls":"","x":575.5,"y":149,"wires":[["ea2889ea.97bda","c055c954.c88f2"]]},{"id":"65aa5f23.047948","type":"worldmap","z":"75f203cc.dbc05c","name":"","lat":"","lon":"","zoom":"","cluster":"","maxage":"","x":1056.5,"y":259,"wires":[]},{"id":"4e19e387.1cb324","type":"inject","z":"75f203cc.dbc05c","name":"","topic":"","payload":"","payloadType":"none","repeat":"","crontab":"","once":false,"x":506.5,"y":245,"wires":[["76c4cf9d.61e6f8"]]},{"id":"76c4cf9d.61e6f8","type":"function","z":"75f203cc.dbc05c","name":"add new layer","func":"msg.payload = {};\nmsg.payload.command = {};\n\nvar u = 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png';\nvar o = JSON.stringify({ maxZoom: 19, attribution: '&copy; OpenStreetMap'});\n\nmsg.payload.command.map = {name:\"OSMhot\", url:u, opt:o};\nmsg.payload.command.layer = \"OSMhot\";\n\nreturn msg;","outputs":1,"noerr":0,"x":690.5,"y":246,"wires":[["65aa5f23.047948"]]},{"id":"65fcba9f.d61764","type":"function","z":"75f203cc.dbc05c","name":"move and zoom","func":"msg.payload = { command:{layer:\"Esri Terrain\",lat:0,lon:0,zoom:3} };\nreturn msg;","outputs":1,"noerr":0,"x":697.5,"y":316,"wires":[["65aa5f23.047948"]]},{"id":"a2517ce9.07217","type":"inject","z":"75f203cc.dbc05c","name":"","topic":"","payload":"","payloadType":"none","repeat":"","crontab":"","once":false,"x":501.5,"y":316,"wires":[["65fcba9f.d61764"]]},{"id":"eb8412a3.859438","type":"python3-function","z":"75f203cc.dbc05c","name":"Get Netatmo Token","func":"from modules.library import get_netatmo_token\nfrom yaml import load, Loader\n\nwith open('modules/config.yml', 'r') as f:\n    data = load(f, Loader=Loader)\n    \nid_ = data['netatmo_client_id']\nsecret = data['netatmo_client_secret']\nusername = data['netatmo_username']\npassword = data['netatmo_password']\ntoken = get_netatmo_token(id_,secret,username,password)\n\nrest_api = data['netatmo_rest_api']\nurl = rest_api[0] + token + rest_api[1]\n\nmsg['url'] = url\n\nreturn msg","outputs":1,"x":358.5,"y":149,"wires":[["6713fd20.147cbc"]]},{"id":"fcf937dd.8679b8","type":"python3-function","z":"75f203cc.dbc05c","name":"Store on MongoDB","func":"from modules.library import clean_netatmo_data2\nfrom modules.library import insert_mongo\n\nnetatmo_data = msg['payload']\ndata = clean_netatmo_data2(netatmo_data)\nhost = 'mongodb'\ndb = 'myDB'\ncollection = 'biotope'\nres = insert_mongo(db, collection, data, host)\n\nreturn msg","outputs":1,"x":949.5,"y":100,"wires":[[]]},{"id":"c055c954.c88f2","type":"json","z":"75f203cc.dbc05c","name":"","x":747.5,"y":100,"wires":[["fcf937dd.8679b8"]]},{"id":"3e81e12e.dc987e","type":"http request","z":"75f203cc.dbc05c","name":"Lyon's Traffic Data request","method":"GET","ret":"txt","url":"https://download.data.grandlyon.com/wfs/rdata?SERVICE=WFS&VERSION=2.0.0&outputformat=GEOJSON&maxfeatures=30&request=GetFeature&typename=pvo_patrimoine_voirie.pvotrafic&SRSNAME=urn:ogc:def:crs:EPSG::4171","tls":"","x":365,"y":414,"wires":[["8598912e.12e228","8b713790.c53828","7ebfe773.a6933"]]},{"id":"8598912e.12e228","type":"json","z":"75f203cc.dbc05c","name":"","x":516,"y":472,"wires":[["8dac4121.9f2d3"]]},{"id":"8b713790.c53828","type":"function","z":"75f203cc.dbc05c","name":"Preprocess Traffic Data","func":"var outputMsgs = [];\nvar tmp = JSON.parse(msg.payload);\n\nall = tmp['features'];\n\nfor (var x in all) {\n    var msg = {payload:all[x]['properties']};\n    var location = all[x]['geometry']['coordinates'];\n    if (all[x]['geometry']['type'] == \"MultiLineString\") {\n        location = location[0]\n    }\n    msg.payload.lon = location[0][0];\n    msg.payload.lat = location[0][1];\n    \n    msg.payload.layer = \"traffic\";\n    msg.payload.name = msg.payload.twgid;\n    msg.payload.icon = \"car\";\n    msg.payload.iconColor = \"red\";\n    delete msg.payload.twgid;\n    \n    outputMsgs.push(msg);\n}\nreturn [outputMsgs];","outputs":1,"noerr":0,"x":654,"y":415,"wires":[["65aa5f23.047948"]]},{"id":"8dac4121.9f2d3","type":"python3-function","z":"75f203cc.dbc05c","name":"Store on MongoDB","func":"from modules.library import clean_lyon_data2\nfrom modules.library import insert_mongo\n\ntraffic_data = msg['payload']['features']\n#print traffic_data\ndata = clean_lyon_data2(traffic_data)\nhost = 'mongodb'\ndb = 'myDB'\ncollection = 'biotope'\n#print data\nres = insert_mongo(db, collection, data, host)\n\nreturn msg","outputs":1,"x":709.5,"y":472,"wires":[[]]},{"id":"394c1c71.a1d094","type":"link out","z":"75f203cc.dbc05c","name":"","links":["3b371a79.65a916","fccd6ba4.50a5d8"],"x":1019.5,"y":151,"wires":[]},{"id":"7ebfe773.a6933","type":"debug","z":"75f203cc.dbc05c","name":"","active":true,"console":"false","complete":"true","x":598.5,"y":370,"wires":[]}]
